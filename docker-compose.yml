services:
  frontend_app:
    container_name: integration_frontend
    build:
      context: ./IntegracjaFrontend/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - frontend_network
    depends_on:
      - frontend_backend
    restart: unless-stopped

  frontend_backend:
    container_name: integration_backend
    build:
      context: ./IntegracjaFrontend/backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=frontend_postgres
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgrespassword}
      - DB_NAME=${DB_NAME:-integration_db}
      - DB_PORT=5432
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here}
      - NODE_ENV=${NODE_ENV:-development}
      - SOAP_URL=http://soap-service:8080/data-service?wsdl
    ports:
      - "3001:3001"
    networks:
      - frontend_network
      - user_network
      - soap_network
    depends_on:
      frontend_postgres:
        condition: service_healthy
      soap-service:
        condition: service_healthy
    restart: unless-stopped

  frontend_postgres:
    container_name: integration_frontend_db
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgrespassword}
      POSTGRES_DB: ${DB_NAME:-integration_db}
      PGDATA: /data/postgres
    volumes:
      - frontend-postgres-data:/data/postgres
      - ./IntegracjaFrontend/backend/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    networks:
      - user_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend_pgadmin:
    container_name: integration_frontend_pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - frontend-pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - user_network
    restart: unless-stopped
    depends_on:
      - frontend_postgres

  soap-service:
    build:
      context: ./IntegracjaBackend
      dockerfile: Dockerfile
      args:
        - JAVA_OPTS=-Xmx512m -Xms256m
    ports:
      - "8080:8080"
    container_name: soap-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/data-service?wsdl"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - soap_network
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M

networks:
  frontend_network:
    driver: bridge
  user_network:
    driver: bridge
  soap_network:
    driver: bridge

volumes:
  frontend-postgres-data:
  frontend-pgadmin-data: 