services:
  frontend_app:
    container_name: integration_frontend
    build:
      context: ./IntegracjaFrontend/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - frontend_network
    depends_on:
      - frontend_controller
      - api-interactor
    restart: unless-stopped

  frontend_controller:
    container_name: integration_frontend_controller
    build:
      context: ./IntegracjaFrontend/backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=${DB_HOST:-users-db}
      - DB_PORT=${DB_PORT:-27017}
      - NODE_ENV
      - SOAP_URL
      - INTERACTOR_URL
    secrets:
      - jwt_secret
      - db_user
      - db_password
      - db_name
    networks:
      - frontend_network
      - user_auth_network
      - soap_network
      - download_network
    depends_on:
      users_db:
        condition: service_healthy
      soap-service:
        condition: service_healthy
    restart: unless-stopped

  users_db:
    container_name: ${DB_HOST:-users-db}
    image: mongo:latest
    command: mongod --port ${DB_PORT:-27017}
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/db_user
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/db_password
      MONGO_INITDB_DATABASE_FILE: /run/secrets/db_name
    secrets:
      - db_user
      - db_password
      - db_name
    volumes:
      - frontend-mongodb-users:/data/db
    networks:
      - user_auth_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok || exit(1)"]
      interval: 30s
      timeout: 10s
      retries: 2

  mysql-jpa:
    image: mysql:8.3
    container_name: mysql-data
    environment:
      MYSQL_DATABASE: jpa
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - mysql_network

  soap-service:
    container_name: soap-service
    build:
      context: ./IntegracjaBackend
      dockerfile: Dockerfile
      args:
        - JAVA_OPTS=-Xmx512m -Xms256m
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/data-service?wsdl"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - soap_network
      - mysql_network
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M
    depends_on:
      mysql-jpa:
        condition: service_healthy
    secrets:
      - jwt_secret

  api-interactor:
    build:
      context: ./IntegracjaAPIInteractor
      dockerfile: Dockerfile
      args:
        - JAVA_OPTS=-Xmx512m -Xms256m
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m
    restart: unless-stopped
    networks:
      - download_network
      - soap_network
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M
    secrets:
      - jwt_secret
    depends_on:
      soap-service:
        condition: service_healthy 

networks:
  frontend_network:
    driver: bridge
  user_auth_network:
    driver: bridge
  soap_network:
    driver: bridge
  download_network:
    driver: bridge
  mysql_network:
    driver: bridge


volumes:
  frontend-mongodb-users:
  mysql_data:

secrets:
  jwt_secret:
    file: ./secrets/jwt_secret.txt
  db_user:
    file: ./secrets/db_user.txt
  db_password:
    file: ./secrets/db_password.txt
  db_name:
    file: ./secrets/db_name.txt 